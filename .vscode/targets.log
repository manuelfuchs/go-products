make all --print-data-base --no-builtin-variables --no-builtin-rules --question
# GNU Make 3.81
# Copyright (C) 2006  Free Software Foundation, Inc.
# This is free software; see the source for copying conditions.
# There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

# This program built for i386-apple-darwin11.3.0

# Make data base, printed on Wed Apr  7 22:05:52 2021

# Variables

# automatic
<D = $(patsubst %/,%,$(dir $<))
# automatic
?F = $(notdir $?)
# makefile (from `Makefile', line 21)
rm_sql_server = ${docker_container_rm} ${sql_server}
# environment
ELECTRON_NO_ATTACH_CONSOLE = 1
# makefile (from `Makefile', line 2)
create_role_script = `cat sql/create_role.sql`
# environment
LC_CTYPE = UTF-8
# environment
VSCODE_LOG_NATIVE = false
# makefile (from `Makefile', line 7)
go_run = ${go_cmd} run
# automatic
?D = $(patsubst %/,%,$(dir $?))
# automatic
@D = $(patsubst %/,%,$(dir $@))
# automatic
@F = $(notdir $@)
# makefile
CURDIR := /Users/manuelfuchs/Work/FH-Hagenberg/MSc/Semester2/CD/Assignments/03/go-products
# makefile
SHELL = /bin/sh
# environment
VSCODE_NLS_CONFIG = {"locale":"en-gb","availableLanguages":{},"_languagePackSupport":true}
# environment
_ = /usr/bin/make
# makefile (from `Makefile', line 14)
docker_container_rm = ${docker_container} rm
# environment
MAVEN_HOME = /Users/manuelfuchs/.sdkman/candidates/maven/current
# makefile (from `Makefile', line 1)
MAKEFILE_LIST :=  Makefile
# environment
VSCODE_NODE_CACHED_DATA_DIR = /Users/manuelfuchs/Library/Application Support/Code/CachedData/2b9aebd5354a3629c3aba0a5f5df49f43d6689f8
# environment
VSCODE_VERBOSE_LOGGING = true
# environment
__CFBundleIdentifier = com.apple.Terminal
# makefile (from `Makefile', line 19)
start_sql_server = ${docker_container_run} --name ${sql_server} -p 5432:5432 -e POSTGRES_PASSWORD=mysecretpassword -d postgres
# environment
VSCODE_IPC_HOOK_EXTHOST = /var/folders/j6/p9pz2dm13g7cfq0b2syvmhkr0000gn/T/vscode-ipc-ceb9b7df-0e0a-41c1-9b8a-5b785ba423bb.sock
# makefile (from `Makefile', line 4)
drop_role_script = `cat sql/drop_role.sql`
# environment
PATH = /usr/local/sbin:/Users/manuelfuchs/.sdkman/candidates/maven/current/bin:/Users/manuelfuchs/.sdkman/candidates/java/current/bin:/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/bin:/usr/local/anaconda3/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Library/TeX/texbin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/Applications/Wireshark.app/Contents/MacOS:/Users/manuelfuchs/opt/apache-karaf-4.2.8/bin
# environment
LSCOLORS = Gxfxcxdxbxegedabagacad
# makefile (from `Makefile', line 17)
sql_server = postgres
# environment
SDKMAN_DIR = /Users/manuelfuchs/.sdkman
# environment
SDKMAN_CANDIDATES_API = https://api.sdkman.io/2
# environment
SDKMAN_PLATFORM = Darwin
# environment
VSCODE_LOG_STACK = false
# environment
ELECTRON_RUN_AS_NODE = 1
# makefile (from `Makefile', line 22)
execute_on_sql_server = ${docker_container_exec} ${sql_server} 
# default
.FEATURES := target-specific order-only second-expansion else-if archives jobserver check-symlink
# environment
SSH_AUTH_SOCK = /private/tmp/com.apple.launchd.KGj12re06l/Listeners
# automatic
%F = $(notdir $%)
# makefile (from `Makefile', line 13)
docker_container_stop = ${docker_container} stop
# environment
VSCODE_PIPE_LOGGING = true
# environment
PWD = /Users/manuelfuchs/current_fh_semester/CD/Assignments/03/go-products
# environment
ORIGINAL_XDG_CURRENT_DESKTOP = undefined
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/services/extensions/node/extensionHostProcess
# environment
HOME = /Users/manuelfuchs
# makefile (from `Makefile', line 15)
docker_container_exec = ${docker_container} exec
# default
MAKEFILEPATH := /Applications/Xcode.app/Contents/Developer/Makefiles
# environment
VSCODE_CLI = 1
# environment
LOGNAME = manuelfuchs
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = true
# environment
ZSH = /Users/manuelfuchs/.oh-my-zsh
# environment
M2_HOME = /usr/local/Cellar/maven/3.6.3_1/libexec
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# automatic
^D = $(patsubst %/,%,$(dir $^))
# makefile (from `Makefile', line 6)
go_cmd = go
# environment
XPC_FLAGS = 0x0
# environment
SDKMAN_VERSION = 5.9.1+575
# default
MAKE = $(MAKE_COMMAND)
# default
MAKECMDGOALS := all
# environment
SHLVL = 3
# environment
JAVA_HOME = /Users/manuelfuchs/.sdkman/candidates/java/current
# default
MAKE_VERSION := 3.81
# environment
USER = manuelfuchs
# makefile
.DEFAULT_GOAL := run
# environment
TERM_SESSION_ID = 0151B9AE-6FB7-4A27-A126-3F2FEE133A9E
# environment
LESS = -R
# automatic
%D = $(patsubst %/,%,$(dir $%))
# makefile (from `Makefile', line 12)
docker_container_run = ${docker_container} run
# default
MAKE_COMMAND := /Applications/Xcode.app/Contents/Developer/usr/bin/make
# environment
TERM_PROGRAM = Apple_Terminal
# default
.VARIABLES := 
# environment
TMPDIR = /var/folders/j6/p9pz2dm13g7cfq0b2syvmhkr0000gn/T/
# automatic
*F = $(notdir $*)
# environment
VSCODE_IPC_HOOK = /Users/manuelfuchs/Library/Application Support/Code/1.54.3-main.sock
# makefile
MAKEFLAGS = Rrqp
# makefile (from `Makefile', line 10)
docker = docker
# environment
MFLAGS = -Rrqp
# automatic
*D = $(patsubst %/,%,$(dir $*))
# environment
TERM_PROGRAM_VERSION = 440
# environment
XPC_SERVICE_NAME = 0
# makefile (from `Makefile', line 11)
docker_container = ${docker} container
# automatic
+D = $(patsubst %/,%,$(dir $+))
# makefile (from `Makefile', line 1)
create_table_script = `cat sql/create_table.sql`
# automatic
+F = $(notdir $+)
# environment
__CF_USER_TEXT_ENCODING = 0x1F5:0x0:0x0
# default
MAKEFILES := 
# makefile (from `Makefile', line 8)
go_test = ${go_cmd} test -v
# automatic
<F = $(notdir $<)
# environment
SDKMAN_CANDIDATES_DIR = /Users/manuelfuchs/.sdkman/candidates
# environment
KARAF_HOME = /Users/manuelfuchs/opt/apache-karaf-4.2.8
# environment
PAGER = less
# makefile (from `Makefile', line 23)
psql_command = psql -U postgres
# automatic
^F = $(notdir $^)
# default
SUFFIXES := 
# makefile (from `Makefile', line 20)
stop_sql_server = ${docker_container_stop} ${sql_server}
# default
.INCLUDE_DIRS = /usr/local/include
# environment
MAKELEVEL := 0
# makefile (from `Makefile', line 3)
drop_table_script = `cat sql/drop_table.sql`
# environment
TERM = xterm-256color
# environment
VSCODE_PID = 14078
# variable set hash-table stats:
# Load=97/1024=9%, Rehash=0, Collisions=1/121=1%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 16777222, inode 61440463): 14 files, no impossibilities.

# 14 files, no impossibilities in 1 directories.

# Implicit Rules

# No implicit rules.

# Files

# Not a target:
all:
#  Command-line target.
#  Implicit rule search has been done.
#  File does not exist.
#  File has not been updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/0=0%

.PHONY: run test sql-up sql-down sql-start sql-setup
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
.SUFFIXES:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
Makefile:
#  Implicit rule search has been done.
#  Last modified 2021-03-28 22:51:19
#  File has been updated.
#  Successfully updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/0=0%

test:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 29):
	@${go_test} ./cmd/...
	

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

sql-setup: sql-start
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 47):
	@echo "Creating role"
	@${execute_on_sql_server} ${psql_command} -c "${create_role_script}" > /dev/null
	@echo "Creating table"
	@${execute_on_sql_server} ${psql_command} -c "${create_table_script}" > /dev/null
 
make: *** No rule to make target `all'.  Stop.
 
	

run:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 26):
	@${go_run} ./cmd/...
	

sql-up: sql-start sql-setup
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

sql-start:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 42):
	@echo "Starting SQL-server"
	@${start_sql_server} > /dev/null
	@sleep 2
	

sql-down:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 36):
	@echo "Stopping SQL-server"
	@${stop_sql_server} > /dev/null
	@echo "Removing SQL_server"
	@${rm_sql_server} > /dev/null
	

# files hash-table stats:
# Load=11/1024=1%, Rehash=0, Collisions=0/32=0%
# VPATH Search Paths

# No `vpath' search paths.

# No general (`VPATH' variable) search path.

# # of strings in strcache: 1
# # of strcache buffers: 1
# strcache size: total = 4096 / max = 4096 / min = 4096 / avg = 4096
# strcache free: total = 4087 / max = 4087 / min = 4087 / avg = 4087

# Finished Make data base on Wed Apr  7 22:05:52 2021

 
